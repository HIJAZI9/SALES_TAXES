
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moham
 */
public class Main extends javax.swing.JFrame {

    //public static int [] id = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15} ;
    public static String[] names = {"Chocolate Bar", "Book", "CD", "Chocolate Box", "Oil", "Cola", "Bottle of Perfume", "Packet Of Headache Pills", "Cola Box", "Imported Bottle of Perfume", "Imported Headache Pills ", "Imported Oil", "Imported Chocolate Box", "Imported Cola Box", "Imported Books"};
    public static float[] prices = {0.85f, 12.49f, 14.99f, 10.0f, 4.0f, 2.5f, 18.99f, 9.75f, 11.0f, 27.99f, 9.75f, 6.0f, 11.25f, 13.0f, 13.5f};
    /**
    * free_tax=0%
    * internal=5%
    * imported=10%
    * internal_imported=15%
    */
    public static String[] tax_classes = {"free_tax", "free_tax", "internal", "free_tax", "free_tax", "internal", "internal", "free_tax", "internal_imported", "internal_imported", "imported", "imported", "imported", "imported", "imported"};

    //private static final DecimalFormat df = new DecimalFormat("0.00");

    public float total_tax = 0.0f; //Total Tax rounded up to the nearst 0.05
    public float total = 0.0f;  //Total Sum with Produkts Tax (rounded up to the nearst 0.05)

    /**
     * Creates new form salesTaxes
     */
    public Main() {
        initComponents();
        CreateDb();
        Create_goods_table();
        initialize_goods_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelProducts = new javax.swing.JPanel();
        jbtnCD = new javax.swing.JButton();
        jbtnBook = new javax.swing.JButton();
        jbtnChocolateBar = new javax.swing.JButton();
        jbtnChocolateBox = new javax.swing.JButton();
        jbtnOil = new javax.swing.JButton();
        jbtnCola = new javax.swing.JButton();
        jbtnHeadachePills = new javax.swing.JButton();
        jbtnColaBox = new javax.swing.JButton();
        jbtnBottleOfPerfume = new javax.swing.JButton();
        jbtnImportedHeadachePills = new javax.swing.JButton();
        jbtnImportedOil = new javax.swing.JButton();
        jbtnImportedColaBox = new javax.swing.JButton();
        jbtnImportedChocolateBox = new javax.swing.JButton();
        jbtnImportedBooks = new javax.swing.JButton();
        jLabelImportedGoods = new javax.swing.JLabel();
        jbtBottelOfParfume = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReceipt = new javax.swing.JTable();
        jPanelOperation = new javax.swing.JPanel();
        jbtnReset = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jbtnPrint = new javax.swing.JButton();
        jbtnRemove = new javax.swing.JButton();
        jPanelResult = new javax.swing.JPanel();
        jLabelTotal = new javax.swing.JLabel();
        jLabelSalesTaxes = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jTextFieldSalesTax = new javax.swing.JTextField();
        jLabelReceipt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelProducts.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanelProducts.setForeground(new java.awt.Color(242, 242, 242));
        jPanelProducts.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnCD.setText("CD");
        jbtnCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCDActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnCD, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 190, 40));

        jbtnBook.setText("Book");
        jbtnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBookActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 170, 40));

        jbtnChocolateBar.setText("Chocolate Bar");
        jbtnChocolateBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChocolateBarActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnChocolateBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 190, 40));

        jbtnChocolateBox.setText("Chocolate Box");
        jbtnChocolateBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChocolateBoxActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnChocolateBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 190, 40));

        jbtnOil.setText("Oil");
        jbtnOil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOilActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnOil, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 170, 40));

        jbtnCola.setText("Cola");
        jbtnCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnColaActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnCola, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 190, 40));

        jbtnHeadachePills.setText("Headache Pills");
        jbtnHeadachePills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHeadachePillsActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnHeadachePills, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 170, 40));

        jbtnColaBox.setText("Cola Box");
        jbtnColaBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnColaBoxActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnColaBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 190, 40));

        jbtnBottleOfPerfume.setText("Bottle of Perfume");
        jbtnBottleOfPerfume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBottleOfPerfumeActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnBottleOfPerfume, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 190, 40));

        jbtnImportedHeadachePills.setText("Headache Pills ");
        jbtnImportedHeadachePills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportedHeadachePillsActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnImportedHeadachePills, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 170, 40));

        jbtnImportedOil.setText("Oil ");
        jbtnImportedOil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportedOilActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnImportedOil, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 190, 40));

        jbtnImportedColaBox.setText("Cola Box");
        jbtnImportedColaBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportedColaBoxActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnImportedColaBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 170, 40));

        jbtnImportedChocolateBox.setText("Chocolate Box ");
        jbtnImportedChocolateBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportedChocolateBoxActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnImportedChocolateBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 190, 40));

        jbtnImportedBooks.setText("Books ");
        jbtnImportedBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnImportedBooksActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtnImportedBooks, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 190, 40));

        jLabelImportedGoods.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelImportedGoods.setText("Imported Goods");
        jPanelProducts.add(jLabelImportedGoods, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, -1, -1));

        jbtBottelOfParfume.setText("Bottle of Perfume ");
        jbtBottelOfParfume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBottelOfParfumeActionPerformed(evt);
            }
        });
        jPanelProducts.add(jbtBottelOfParfume, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 233, 190, 40));

        getContentPane().add(jPanelProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 600, 330));

        jTableReceipt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Price", "Tax"
            }
        ));
        jScrollPane1.setViewportView(jTableReceipt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 300, 330));

        jPanelOperation.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanelOperation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnReset.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbtnReset.setText("Reset");
        jbtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnResetActionPerformed(evt);
            }
        });
        jPanelOperation.add(jbtnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 210, 40));

        jbtnExit.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbtnExit.setText("Exit");
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });
        jPanelOperation.add(jbtnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 210, 40));

        jbtnPrint.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbtnPrint.setText("Print");
        jbtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrintActionPerformed(evt);
            }
        });
        jPanelOperation.add(jbtnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 320, 40));

        jbtnRemove.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jbtnRemove.setText("Remove ");
        jbtnRemove.setToolTipText("");
        jbtnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoveActionPerformed(evt);
            }
        });
        jPanelOperation.add(jbtnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 320, 40));

        getContentPane().add(jPanelOperation, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, 600, 110));

        jPanelResult.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanelResult.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTotal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTotal.setText("Total");
        jPanelResult.add(jLabelTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 140, 40));

        jLabelSalesTaxes.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelSalesTaxes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSalesTaxes.setText("Sales Taxes");
        jPanelResult.add(jLabelSalesTaxes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 140, 40));

        jTextFieldTotal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextFieldTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanelResult.add(jTextFieldTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 140, 30));

        jTextFieldSalesTax.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextFieldSalesTax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldSalesTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSalesTaxActionPerformed(evt);
            }
        });
        jPanelResult.add(jTextFieldSalesTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 140, 30));

        getContentPane().add(jPanelResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 300, 110));

        jLabelReceipt.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabelReceipt.setForeground(new java.awt.Color(51, 153, 255));
        jLabelReceipt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelReceipt.setText("Receipt");
        getContentPane().add(jLabelReceipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 150, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
        /**
         * Create Reset Button
         */
    private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        model.setRowCount(0);

        jTextFieldSalesTax.setText(""); //Put SalesTax TextField Empty
        jTextFieldTotal.setText("");    //Put Total TextField Empty
    }//GEN-LAST:event_jbtnResetActionPerformed
        /**
         * Create Exit Button
         */
    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        this.dispose();      //close window                    
    }//GEN-LAST:event_jbtnExitActionPerformed
        /**
         * Create Print Button
         */
    private void jbtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrintActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        int rows_n = model.getRowCount();

        List<String> names_temp = new ArrayList<String>(); //to store all Names of products 
        List<Integer> quantity_temp = new ArrayList<Integer>();//to store all Quantities of products 
        List<Float> prices_temp = new ArrayList<Float>();//to store all prices of products 

        for (int i = 0; i < rows_n; i++) {  // Loop through the rows

            names_temp.add((String) model.getValueAt(i, 0));     //add all Values from First column '0' to names_temp

            quantity_temp.add((Integer) model.getValueAt(i, 1)); //add all Values from Second column '1' to quantity_temp

            prices_temp.add((Float) model.getValueAt(i, 2));     //add all Values from third column '2' to prices_temp
        }

        Printing print = new Printing(names_temp, quantity_temp, prices_temp, total_tax, total);
        print.setVisible(true);
    }//GEN-LAST:event_jbtnPrintActionPerformed
        /**
         * Create Remove Button
         */
    private void jbtnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoveActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        int rows_count = model.getRowCount();
        if (rows_count > 0) {
            int index_row = jTableReceipt.getSelectedRow();
            if (index_row != -1) {
                model.removeRow(index_row);
                claculate_sales_tax();
                claculate_total();
            } else {
                JOptionPane.showMessageDialog(this, " please select one row firstly , to remove it");
            }
        } else {
            JOptionPane.showMessageDialog(this, " can not delete , the table is empty");
        }
    }//GEN-LAST:event_jbtnRemoveActionPerformed

    private void jTextFieldSalesTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSalesTaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSalesTaxActionPerformed

    private void jbtnCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCDActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(2, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnCDActionPerformed

    private void jbtnColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnColaActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(5, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnColaActionPerformed

    private void jbtnColaBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnColaBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(8, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnColaBoxActionPerformed

    private void jbtnBottleOfPerfumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBottleOfPerfumeActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(6, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnBottleOfPerfumeActionPerformed


    private void jbtnChocolateBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChocolateBarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(0, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnChocolateBarActionPerformed

    private void jbtnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBookActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(1, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnBookActionPerformed

    private void jbtnChocolateBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChocolateBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(3, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnChocolateBoxActionPerformed

    private void jbtnOilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOilActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(4, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnOilActionPerformed

    private void jbtnHeadachePillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHeadachePillsActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(7, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnHeadachePillsActionPerformed

    private void jbtnImportedHeadachePillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportedHeadachePillsActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(10, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnImportedHeadachePillsActionPerformed

    private void jbtnImportedOilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportedOilActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(11, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnImportedOilActionPerformed

    private void jbtnImportedChocolateBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportedChocolateBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(12, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnImportedChocolateBoxActionPerformed

    private void jbtnImportedColaBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportedColaBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(13, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnImportedColaBoxActionPerformed

    private void jbtnImportedBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnImportedBooksActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(14, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtnImportedBooksActionPerformed

    private void jbtBottelOfParfumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBottelOfParfumeActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableReceipt.getModel();
        Main.add_product(9, model);
        claculate_sales_tax();
        claculate_total();
    }//GEN-LAST:event_jbtBottelOfParfumeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main inter = new Main();

                ImageIcon icon = null;
                ///////////
                File file = new File("photos/Icon.png");
                try {
                    BufferedImage bufferedImage = ImageIO.read(file);
                    icon = new ImageIcon(bufferedImage);

                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }

                /////////
                inter.setIconImage(icon.getImage());
                inter.setTitle("selling application");

                inter.setVisible(true);

                //new Interface().setVisible(true);
            }
        });
    }

    //create dataBase : goods_db if it is not exist
    //initialization function
    public static void CreateDb() {
        String url = "jdbc:mysql://localhost";
        String username = "root";
        String password = "root";
        String sql = "CREATE DATABASE IF NOT EXISTS goods_db";

        try ( Connection conn = DriverManager.getConnection(url, username, password);  PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.execute();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //create table : goods if it is not exist
    //initialization function
    public static void Create_goods_table() {

        String DB_URL = "jdbc:mysql://localhost/goods_db";
        String USER = "root";
        String PASS = "root";
        // Open a connection
        try ( Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);  Statement stmt = conn.createStatement();) {
            String sql = "CREATE TABLE IF NOT EXISTS goods "
                    + "(id int NOT NULL AUTO_INCREMENT, "
                    + " name varchar(35) NOT NULL, "
                    + " price float NOT NULL, "
                    + " tax_class varchar(35) DEFAULT NULL, "
                    + " PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3";

            stmt.executeUpdate(sql);
            System.out.println("the table goodds has been created successfully...");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void initialize_goods_table() {

        String DB_URL = "jdbc:mysql://localhost/goods_db";
        String USER = "root";
        String PASS = "root";
        boolean resault = check_if_empty_goods_table();

        if (resault) {
            Connection con;
            PreparedStatement pst;
            String sql = "INSERT INTO goods "
                    + "( name , price , tax_class)"
                    + "VALUES(? , ? , ?)";
            for (int i = 0; i < names.length; i++) {
                try {
                    con = DriverManager.getConnection(DB_URL, USER, PASS);
                    pst = con.prepareStatement(sql);

                    pst.setString(1, names[i]);
                    pst.setFloat(2, prices[i]);
                    pst.setString(3, tax_classes[i]);
                    pst.executeUpdate();

                } catch (SQLException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public static boolean check_if_empty_goods_table() {
        boolean res = false;
        String DB_URL = "jdbc:mysql://localhost/goods_db";
        String USER = "root";
        String PASS = "root";
        Connection con;
        PreparedStatement pst;
        ResultSet rst;
        try {
            con = (Connection) DriverManager.getConnection(DB_URL, USER, PASS);
            String sql = "SELECT * FROM goods";
            pst = con.prepareStatement(sql);
            rst = pst.executeQuery();

            if (rst.next()) { // check if exist more at least one row
                res = false;
            } else {
                res = true;
            }

        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        return res;

    }

    private static void add_product(int index, DefaultTableModel model) {

        String[] names_temp = new String[16]; //store names of products that exist in jtable
        int rows_n = model.getRowCount();
        boolean founded_in_table = false;
        float tax_value = 0.0f;
        if (Main.tax_classes[index].equals("internal")) {
            tax_value = 0.1f;
        } else if (Main.tax_classes[index].equals("imported")) {
            tax_value = 0.05f;
        } else if (Main.tax_classes[index].equals("internal_imported")) {
            tax_value = 0.15f;
        } else if (Main.tax_classes[index].equals("free_tax")) {
            tax_value = 0.0f;
        }
        float added_price = 0.0f;
        if (rows_n == 0) {
            added_price = tax_value * prices[index];
            //added_price = Float.parseFloat(df.format(added_price));
            model.addRow(new Object[]{names[index], 1, prices[index], added_price});
        } else {
            //search for product , then get row's index
            for (int i = 0; i < rows_n; i++) {  // Loop through the rows

                names_temp[i] = (String) model.getValueAt(i, 0);
            }
            for (int i = 0; i < names_temp.length; i++) {
                if (names[index].equals(names_temp[i])) {
                    int new_quantity = (int) model.getValueAt(i, 1) + 1;
                    float new_price = (float) model.getValueAt(i, 2) + prices[index];
                    added_price = tax_value * prices[index] * new_quantity;
                    //added_price = Float.parseFloat(df.format(added_price));
                    model.setValueAt(new_quantity, i, 1); //edit quantity
                    model.setValueAt(new_price, i, 2); //edit price
                    model.setValueAt(added_price, i, 3);
                    founded_in_table = true;
                }
            }
            if (!founded_in_table) {
                added_price = tax_value * prices[index];
                //added_price = Float.parseFloat(df.format(added_price));
                model.addRow(new Object[]{names[index], 1, prices[index], added_price});
            }
        }

    }

    public void claculate_sales_tax() {
        float sum_tax = 0.0f;
        for (int i = 0; i < jTableReceipt.getRowCount(); i++) {
            sum_tax = sum_tax + (float)jTableReceipt.getValueAt(i, 3);
        }

        //sum_tax = Float.parseFloat(df.format(sum_tax));

        jTextFieldSalesTax.setText(String.format("%.2f",sum_tax));
        total_tax = sum_tax;
    }

    public void claculate_total() {
        float total_money = 0.0f;
        for (int i = 0; i < jTableReceipt.getRowCount(); i++) {
            total_money = total_money + (float) jTableReceipt.getValueAt(i, 3) + (float) jTableReceipt.getValueAt(i, 2);
        }

       // total_money = Float.parseFloat(df.format(total_money));

        jTextFieldTotal.setText(String.format("%.2f",total_money));
        total = total_money;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelImportedGoods;
    private javax.swing.JLabel jLabelReceipt;
    private javax.swing.JLabel jLabelSalesTaxes;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JPanel jPanelOperation;
    private javax.swing.JPanel jPanelProducts;
    private javax.swing.JPanel jPanelResult;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableReceipt;
    private javax.swing.JTextField jTextFieldSalesTax;
    private javax.swing.JTextField jTextFieldTotal;
    private javax.swing.JButton jbtBottelOfParfume;
    private javax.swing.JButton jbtnBook;
    private javax.swing.JButton jbtnBottleOfPerfume;
    private javax.swing.JButton jbtnCD;
    private javax.swing.JButton jbtnChocolateBar;
    private javax.swing.JButton jbtnChocolateBox;
    private javax.swing.JButton jbtnCola;
    private javax.swing.JButton jbtnColaBox;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnHeadachePills;
    private javax.swing.JButton jbtnImportedBooks;
    private javax.swing.JButton jbtnImportedChocolateBox;
    private javax.swing.JButton jbtnImportedColaBox;
    private javax.swing.JButton jbtnImportedHeadachePills;
    private javax.swing.JButton jbtnImportedOil;
    private javax.swing.JButton jbtnOil;
    private javax.swing.JButton jbtnPrint;
    private javax.swing.JButton jbtnRemove;
    private javax.swing.JButton jbtnReset;
    // End of variables declaration//GEN-END:variables
}
